#!/usr/bin/env python
# -*- coding: utf-8 -*-
import requests, argparse, os, json, datetime, sys

def main():
  ### Define the mode
  if len(sys.argv) == 1:
    interactive()
  else:
    autoconvert()

def get_rates():
  ### Download rates from API
  cache = "/tmp/currency_rates.cache"

  if os.path.isfile(cache):
    dt=os.path.getmtime(cache)

  if os.path.isfile(cache) and (datetime.datetime.utcfromtimestamp(dt) > datetime.datetime.utcnow() - datetime.timedelta(minutes=10)):
    with open(cache, 'r') as f:
      data = json.load(f)
  else:
    resp = requests.get("https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5")
    data = resp.json()
    with open(cache, 'w') as f:
      json.dump(data, f)
  return (data)

def autoconvert():
  ### Parse arguments
  parser = argparse.ArgumentParser(description='UAH<>EUR converter using PrivatBank API')
  parser.add_argument('amount', metavar='N', type=float, help='amount of currency to convert')
  parser.add_argument('curr', metavar='C', type=str, help='currency to convert from')

  args = parser.parse_args()
  ### Get rates
  data = get_rates()
  ### Convert
  if args.curr == "eur" or args.curr == "EUR":
    print ("%.2f" % (args.amount*float(data[0]["buy"])))," UAH"
  elif args.curr == "uah" or args.curr == "UAH":
    print ("%.2f" % (args.amount/float(data[0]["buy"])))," EUR"
  else:
    print "Allowed currencies: UAH|EUR"

def interactive():
  ### Get and print rates
  data = get_rates()
  course = round(float(data[0]["buy"]),2)
  print "EUR buying rate for ", datetime.date.today(), ":" , course,' UAH'

  ### Start interactive mode
  def is_number(str):
      try:
          float(str)
          return True
      except ValueError:
          return False

  print "1. EUR --> UAH"
  print "2. UAH --> EUR"

  response = None
  while response not in ('1', '2'):
      response = raw_input('Choose direction: ')

  sum_value = ''
  while is_number(sum_value) == False:
      sum_value = raw_input('Enter the sum to exchange: ')

  #print sum_value
  if response == '1':
      print ("%.2f" % (float(sum_value) * course))," UAH"
  elif response == '2':
      print ("%.2f" % (float(sum_value) / course))," EUR"

if __name__ == "__main__":
    main()
